from collections import deque

def bipartite(q, graph, color):
    while q:
        pos = q.popleft()
        for nex in graph[pos]:
            if color[nex] == 0:
                color[nex] = color[pos] * (-1)
                q.append(nex)
            elif color[nex] == color[pos]:
                print('No')
                exit()

n, m = map(int, input().split())
graph = [[] for _ in range(n+1)]
for _ in range(m):
    a, b = map(int, input().split())
    graph[a].append(b)
    graph[b].append(a)
q = deque()
color = [0 for _ in range(n+1)]
for i in range(1, n+1):
    if color[i] == 0:
        color[i] = 1
        q.append(i)
        bipartite(q, graph, color)
print('Yes')
